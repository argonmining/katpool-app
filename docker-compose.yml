# version 0.4
services:
  postgres:
    image: postgres
    container_name: katpool-db
    networks:
      - backend
    volumes:
      - /root/docker_deployment/postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    restart: always
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  postgres-migrate:
    image: postgres
    container_name: katpool-db-migrate
    networks:
      - backend
    depends_on:
      - postgres
    volumes:
      - ./migration.sql:/migration.sql
    env_file:
      - .env
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"    
    entrypoint: >
      sh -c "
      until pg_isready -U $POSTGRES_USER -h postgres; do
        echo 'Waiting for Postgres to be ready...';
        sleep 2;
      done;
      export PGPASSWORD=$POSTGRES_PASSWORD;
      psql -U $POSTGRES_USER -h postgres -d $POSTGRES_DB -f /migration.sql;
      "

  # Redis service
  redis:
    image: redis:latest
    container_name: redis
    networks:
      - backend
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  kaspad:
    container_name: kaspad
    image: supertypo/rusty-kaspad:v0.15.2
    restart: unless-stopped
    ports:
      - "16111:16111/tcp"
      - "16110:16110/tcp" # gRPC
      - "17110:17110/tcp" # wRPC (borsh)
      - "18110:18110/tcp" # wRPC (json)
    volumes:
      - /root/docker_deployment/kaspad_mainnet:/app/data/
    networks:
      - backend
    command: kaspad --yes --nologfiles --disable-upnp --utxoindex --rpclisten=0.0.0.0:16110 --rpclisten-borsh=0.0.0.0:17110 --rpclisten-json=0.0.0.0:18110
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  # kaspad: # REGULAR TESTNET
  #   container_name: kaspad
  #   image: supertypo/rusty-kaspad:v0.15.2
  #   restart: unless-stopped
  #   ports:
  #     - "16211:16211/tcp"
  #     - "16210:16210/tcp" # gRPC
  #     - "17210:17210/tcp" # wRPC (borsh)
  #     - "18210:18210/tcp" # wRPC (json)
  #   volumes:
  #     - /root/docker_deployment/kaspad_testnet10:/app/data/
  #   networks:
  #     - backend
  #   command: kaspad --yes --nologfiles --disable-upnp --utxoindex --testnet --rpclisten=0.0.0.0:16210 --rpclisten-borsh=0.0.0.0:17210 --rpclisten-json=0.0.0.0:18210
  #   logging:
  #     driver: journald
  #     options:
  #     tag: "{{.Name}}"

  # kaspad: # 10BPS TESTNET
  #   container_name: kaspad
  #   image: supertypo/rusty-kaspad:tn11
  #   restart: unless-stopped
  #   ports:
  #     - "16311:16311/tcp"
  #     - "16310:16310/tcp" # gRPC
  #     - "17310:17310/tcp" # wRPC (borsh)
  #     - "18310:18310/tcp" # wRPC (json)
  #   volumes:
  #     - /root/docker_deployment/kaspad_testnet11:/app/data/
  #   networks:
  #     - backend
  #   command: kaspad --yes --nologfiles --disable-upnp --utxoindex --testnet --netsuffix=11 --rpclisten=0.0.0.0:16310 --rpclisten-borsh=0.0.0.0:17310 --rpclisten-json=0.0.0.0:18310
  #   logging:
  #     driver: journald
  #     options:
  #     tag: "{{.Name}}"

  go-app:
    image: ghcr.io/argonmining/katpool-blocktemplate-fetcher:beta-v1.0.2-main  # Build the Go app from the ./app directory
    pull_policy: always
    container_name: go-app
    env_file:
      - .env
    depends_on:
      - redis
      - kaspad
    volumes:
      - ./config:/app/config
    networks:
      - backend
    restart: always
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  katpool-app:
    image: ghcr.io/argonmining/katpool-app:beta-v1.0.2-main
    pull_policy: always
    container_name: katpool-app
    depends_on:
      - postgres
      - redis
      - katpool-monitor
      # - pushgateway
    ports:
      - "8888:7777"
    networks:
      - backend
    volumes:
      - ./config:/app/config
    env_file:
      - .env
    restart: always
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  katpool-monitor:
    image: ghcr.io/argonmining/katpool-monitor:beta-v1.0.2-main
    pull_policy: always
    container_name: katpool-monitor
    depends_on:
      - postgres
    networks:
      - backend
    env_file:
      - .env
    ports:
      - "9301:9301"
      - "9300:9300"
    restart: always
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  katpool-payment:
    image: ghcr.io/argonmining/katpool-payment:beta-v1.0.2-main
    pull_policy: always
    container_name: katpool-payment
    depends_on:
      - postgres
    volumes:
      - ./config:/app/config
    networks:
      - backend
    env_file:
      - .env
    restart: always
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  # https://prometheus.io/docs/prometheus/latest/storage/#operational-aspects
  prometheus:
    image: prom/prometheus
    user: root
    container_name: katpool-prmths
    depends_on:
      - postgres
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - /root/docker_deployment/prometheus_data:/prometheus
    networks:
      - backend
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=12w' # Retain data for 12 week = 3 months
      # Retention time defaults to 15d. Supported units: y, w, d, h, m, s, ms.
    restart: always
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  # pushgateway:
  #   image: prom/pushgateway
  #   container_name: katpool-pushgateway
  #   networks:
  #     - backend
  #   restart: always
  #   logging:
  #     driver: journald
  #     options:
  #       tag: "{{.Name}}"

  nginx:
    container_name: katpool-nginx
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    #      - ./htpasswd:/etc/nginx/.htpasswd
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - prometheus
      - katpool-monitor
    restart: always
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  katpool-backup:
    image: ghcr.io/argonmining/katpool-app-db-backup:beta-v1.0.2-main
    container_name: katpool-backup
    depends_on:
      - postgres
    env_file:
      - .env
    volumes:
      - /root/docker_deployment/backup/files:/backup/files
      - ./config:/config
      - ./backup/google-credentials.json:/app/google-credentials.json
    networks:
      - backend
    restart: always
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

networks:
  backend:
    driver: bridge
    name: katpool-app_backend
